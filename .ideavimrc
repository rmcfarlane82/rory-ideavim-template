"" Rory ideavimrc

"" ========================================================
""" Base Settings
"" ========================================================

" General behavior
set scrolloff=10         " Keep 10 lines on screen when scrolling
set linenumber           " Show line numbers
set showmode             " Show the current mode at the bottom
set showcmd              " Display executed commands at the bottom
set visualbell           " Stop the annoying bell sound
set clipboard+=unnamedplus " Use system clipboard

"" ========================================================
""" Search Optimizations
"" ========================================================

set ignorecase           " Case-insensitive search
set smartcase            " Case-sensitive only if uppercase is used
set incsearch            " Search as you type
set hlsearch             " Highlight all matches

"" ========================================================
""" Third Party Plugins
"" ========================================================

set surround             " Enable text surround changes
set highlightedyank      " Highlight text after copying
set nerdtree             " File explorer with Vim-style navigation
set easymotion           " Quick cursor navigation
set notimeout            " Disable timeout waiting for keypress
set which-key            " Display key mappings

"" ========================================================
""" Plugin Settings
"" ========================================================

" Which-Key Visuals
let g:WhichKey_FontSize = 16
let g:WhichKey_CommandColor = "#41ead4"
let g:WhichKey_PrefixColor = "#f335b2"
let g:WhichKey_SortOrder = "by_key_prefix_first"

"" ========================================================
""" Leader Key Configuration
"" ========================================================

let mapleader = " "
let g:WhichKeyDesc_leader = "<leader> Leader key"

"" ========================================================
""" Toggle Mappings (Comments & Regions)
"" ========================================================

let g:WhichKeyDesc_toggle = "<leader>t Toggle"
let g:WhichKeyDesc_toggle_comment = "<leader>tc Comment"
let g:WhichKeyDesc_toggle_blockComment = "<leader>tb Block Comment"
let g:WhichKeyDesc_toggle_region = "<leader>tr Region"

map <leader>tc <Action>(CommentByLineComment)
map <leader>tb <Action>(CommentByBlockComment)
map <leader>tr <Action>(SurroundWithRegion)

"" ========================================================
""" Refactor Mappings
"" ========================================================

let g:WhichKeyDesc_refactor = "<leader>r Refactor"
let g:WhichKeyDesc_refactor_rename = "<leader>rr Rename"
let g:WhichKeyDesc_refactor_extractVariable = "<leader>rv Extract Variable"
let g:WhichKeyDesc_refactor_extractMethod = "<leader>rm Extract Method"
let g:WhichKeyDesc_refactor_inline = "<leader>ri Inline"

map <leader>rr <Action>(RenameElement)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rm <Action>(ExtractMethod)
map <leader>ri <Action>(Inline)

"" ========================================================
""" Reformat Mappings
"" ========================================================

let g:WhichKeyDesc_format = "<leader>f Format"
let g:WhichKeyDesc_format_code = "<leader>fr Reformat Code"
let g:WhichKeyDesc_format_align = "<leader>fa Align"
let g:WhichKeyDesc_format_indent = "<leader>fi Auto-Indent"

map <leader>fr <Action>(ReformatCode)
map <leader>fa <Action>(AlignSelection)
map <leader>fi <Action>(AutoIndentLines)

"" ========================================================
""" Vim Mappings
"" ========================================================

let g:WhichKeyDesc_vim = "<leader>v Vim"
let g:WhichKeyDesc_vim_reload = "<leader>vr Reload ideavimrc"

nnoremap <leader>vr :action IdeaVim.ReloadVimRc.reload<CR>

"" ========================================================
""" EasyMotion Mappings
"" ========================================================

let g:WhichKeyDesc_easymotion = "<leader>j Jump with Easymotion"

map <leader>j <Plug>(easymotion-s2)

"" ========================================================
""" Opening Windows
"" ========================================================

let g:WhichKeyDesc_open = "<leader>o Open"
let g:WhichKeyDesc_open_explorer = "<leader>oe Explorer"
let g:WhichKeyDesc_open_terminal = "<leader>ot Terminal"
let g:WhichKeyDesc_open_git = "<leader>og Git"
let g:WhichKeyDesc_open_services = "<leader>os Services"
let g:WhichKeyDesc_open_commit = "<leader>oc Commit"
let g:WhichKeyDesc_open_problems = "<leader>op Problems"
let g:WhichKeyDesc_open_run = "<leader>or Run"
let g:WhichKeyDesc_open_switcher = "<leader>oS All Tools"

map <leader>oe :NERDTreeToggle<CR>
map <leader>ot <Action>(ActivateTerminalToolWindow)
map <leader>og <Action>(ActivateVersionControlToolWindow)
map <leader>oc <Action>(ActivateCommitToolWindow)
map <leader>os <Action>(ActivateServicesToolWindow)
map <leader>or <Action>(ActivateRunToolWindow)
map <leader>op <Action>(ActivateProblemsViewToolWindow)
map <leader>oS <Action>(Switcher)

"" ========================================================
""" Closing Windows
"" ========================================================

let g:WhichKeyDesc_close = "<leader>c Close"
let g:WhichKeyDesc_close_others = "<leader>co Close Other Tabs"
let g:WhichKeyDesc_close_activeTab = "<leader>ca Close Active Tab"

map <leader>co <Action>(CloseAllEditorsButActive)
map <leader>ca <Action>(CloseContent)

"" ========================================================
""" GoTo Mappings
"" ========================================================

let g:WhichKeyDesc_goto = "<leader>g Go to"
let g:WhichKeyDesc_goto_declaration = "<leader>gd Declaration"
let g:WhichKeyDesc_goto_implementation = "<leader>gi Implementation"
let g:WhichKeyDesc_goto_type = "<leader>gt Type"
let g:WhichKeyDesc_goto_line = "<leader>gl Line"

map <leader>gd <Action>(GotoDeclaration)
map <leader>gi <Action>(GotoImplementation)
map <leader>gt <Action>(GotoTypeDeclaration)
map <leader>gl <Action>(GotoLine)

"" ========================================================
""" Insert Mode Mappings
"" ========================================================

" Exit insert mode by typing 'jj'
inoremap jj <Esc>

" Popup menu navigation
inoremap <C-j> <Esc>:action PopupMenu-selectNext<CR>a
inoremap <C-k> <Esc>:action PopupMenu-selectPrev<CR>a
